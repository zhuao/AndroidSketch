apply plugin: 'com.android.library'

dependencies {

    compile fileTree("libs")

    compile androidLibDependencies.supportV4
    compile androidLibDependencies.appcompatV7
    compile androidLibDependencies.design

    testCompile androidUnitTestDependencies.mockito
    testCompile androidUnitTestDependencies.junit
    testCompile("com.squareup.assertj:assertj-android:${TestVersion.assertAndroid}")
            { exclude group: "com.android.support", module: "support-annotations" }
    testCompile androidUnitTestDependencies.robolectric
}

android {
    compileSdkVersion AndroidVersion.targetSDK
    buildToolsVersion AndroidVersion.buildTool

    defaultConfig {
        minSdkVersion AndroidVersion.minSDK
        targetSdkVersion AndroidVersion.targetSDK
    }
}

def package_namespace = "me.zhuao.android.sketch"
def package_namespace_path = package_namespace.replaceAll("\\.", "/")

//afterEvaluate { project ->
//    android.libraryVariants.each { variant ->
//        // workaround for missing R class for aar dependencies
//        def copyTaskName = "copy${variant.name.capitalize()}AppCompat"
//        task(copyTaskName, type:Copy) {
//            dependsOn "process${variant.name.capitalize()}Resources"
//            from { "build/generated/source/r/${variant.name}/$package_namespace_path" }
////            into { "build/generated/source/r/${variant.name}/android/support/v7/appcompat" }
//            into { "src/test/java/android/support/v7/appcompat" }
//            include 'R.java'
//            filter { line -> line.contains("package ${package_namespace};") ? 'package android.support.v7.appcompat;' : line }
//            outputs.upToDateWhen { false }
//        }
//        System.out.println("adding ${copyTaskName}")
//        tasks.getByName("compile${variant.name.capitalize()}UnitTestJava") dependsOn copyTaskName
//    }
//}
// compileDebugUnitTestSources